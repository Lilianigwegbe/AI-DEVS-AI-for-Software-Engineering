# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestLogintest():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_logintest(self):
    # Test name: logintest
    # Step # | name | target | value
    # 1 | open | /practice-test-login/ | 
    self.driver.get("https://practicetestautomation.com/practice-test-login/")
    # 2 | setWindowSize | 1382x784 | 
    self.driver.set_window_size(1382, 784)
    # 3 | click | id=username | 
    self.driver.find_element(By.ID, "username").click()
    # 4 | type | id=username | student
    self.driver.find_element(By.ID, "username").send_keys("student")
    # 5 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # 6 | type | id=password | Password123
    self.driver.find_element(By.ID, "password").send_keys("Password123")
    # 7 | click | id=submit | 
    self.driver.find_element(By.ID, "submit").click()
    # 8 | assertElementNotPresent | css=.post-title | 
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".post-title")
    assert len(elements) == 0
    # 9 | click | linkText=Log out | 
    self.driver.find_element(By.LINK_TEXT, "Log out").click()
    # 10 | click | id=username | 
    self.driver.find_element(By.ID, "username").click()
    # 11 | type | id=username | student
    self.driver.find_element(By.ID, "username").send_keys("student")
    # 12 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # 13 | type | id=password | Password67
    self.driver.find_element(By.ID, "password").send_keys("Password67")
    # 14 | click | id=submit | 
    self.driver.find_element(By.ID, "submit").click()
    # 15 | verifySelectedLabel | css=li:nth-child(5) > b | practicetestautomation.com/logged-in-successfully/
    element = self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(5) > b")
    locator = "option[@value='{}']".format(element.get_attribute("value"))
    selected_text = element.find_element(By.XPATH, locator).text
    assert selected_text == "practicetestautomation.com/logged-in-successfully/"
  
